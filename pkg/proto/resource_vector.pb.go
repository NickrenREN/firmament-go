// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resource_vector.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResourceVector struct {
	CpuCores             float32  `protobuf:"fixed32,1,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	RamBw                uint64   `protobuf:"varint,2,opt,name=ram_bw,json=ramBw,proto3" json:"ram_bw,omitempty"`
	RamCap               uint64   `protobuf:"varint,3,opt,name=ram_cap,json=ramCap,proto3" json:"ram_cap,omitempty"`
	DiskBw               uint64   `protobuf:"varint,4,opt,name=disk_bw,json=diskBw,proto3" json:"disk_bw,omitempty"`
	DiskCap              uint64   `protobuf:"varint,5,opt,name=disk_cap,json=diskCap,proto3" json:"disk_cap,omitempty"`
	NetTxBw              uint64   `protobuf:"varint,6,opt,name=net_tx_bw,json=netTxBw,proto3" json:"net_tx_bw,omitempty"`
	NetRxBw              uint64   `protobuf:"varint,7,opt,name=net_rx_bw,json=netRxBw,proto3" json:"net_rx_bw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceVector) Reset()         { *m = ResourceVector{} }
func (m *ResourceVector) String() string { return proto.CompactTextString(m) }
func (*ResourceVector) ProtoMessage()    {}
func (*ResourceVector) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd2f68a0615029fb, []int{0}
}

func (m *ResourceVector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceVector.Unmarshal(m, b)
}
func (m *ResourceVector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceVector.Marshal(b, m, deterministic)
}
func (m *ResourceVector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceVector.Merge(m, src)
}
func (m *ResourceVector) XXX_Size() int {
	return xxx_messageInfo_ResourceVector.Size(m)
}
func (m *ResourceVector) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceVector.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceVector proto.InternalMessageInfo

func (m *ResourceVector) GetCpuCores() float32 {
	if m != nil {
		return m.CpuCores
	}
	return 0
}

func (m *ResourceVector) GetRamBw() uint64 {
	if m != nil {
		return m.RamBw
	}
	return 0
}

func (m *ResourceVector) GetRamCap() uint64 {
	if m != nil {
		return m.RamCap
	}
	return 0
}

func (m *ResourceVector) GetDiskBw() uint64 {
	if m != nil {
		return m.DiskBw
	}
	return 0
}

func (m *ResourceVector) GetDiskCap() uint64 {
	if m != nil {
		return m.DiskCap
	}
	return 0
}

func (m *ResourceVector) GetNetTxBw() uint64 {
	if m != nil {
		return m.NetTxBw
	}
	return 0
}

func (m *ResourceVector) GetNetRxBw() uint64 {
	if m != nil {
		return m.NetRxBw
	}
	return 0
}

func init() {
	proto.RegisterType((*ResourceVector)(nil), "proto.ResourceVector")
}

func init() { proto.RegisterFile("resource_vector.proto", fileDescriptor_dd2f68a0615029fb) }

var fileDescriptor_dd2f68a0615029fb = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xcf, 0xbd, 0x6e, 0xc3, 0x20,
	0x14, 0x05, 0x60, 0xe1, 0xfa, 0x97, 0xa1, 0x03, 0x92, 0x55, 0xb7, 0x5d, 0xac, 0x4e, 0x9e, 0xba,
	0xf4, 0x0d, 0xf0, 0x1b, 0xa0, 0xaa, 0x2b, 0xc2, 0x94, 0x21, 0x8a, 0x6c, 0xd0, 0x35, 0x0e, 0x7e,
	0xc5, 0xbc, 0x55, 0x74, 0xaf, 0x93, 0x4c, 0xe8, 0x9e, 0xef, 0x9c, 0x01, 0xde, 0x82, 0x5b, 0xfd,
	0x06, 0xd6, 0xe9, 0x8b, 0xb3, 0xd1, 0xc3, 0x77, 0x00, 0x1f, 0xbd, 0x28, 0xe8, 0xf9, 0xba, 0x32,
	0xfe, 0xaa, 0xee, 0x85, 0x3f, 0x72, 0xf1, 0xc9, 0x1b, 0x1b, 0x36, 0x6d, 0x3d, 0xb8, 0xb5, 0x63,
	0x3d, 0x1b, 0x32, 0x55, 0xdb, 0xb0, 0x8d, 0x78, 0x8b, 0x96, 0x97, 0x60, 0x66, 0x3d, 0xa5, 0x2e,
	0xeb, 0xd9, 0x90, 0xab, 0x02, 0xcc, 0x2c, 0x93, 0x78, 0xe3, 0x15, 0xc6, 0xd6, 0x84, 0xee, 0x85,
	0x72, 0x6c, 0x8d, 0x26, 0x20, 0xfc, 0x9f, 0xd6, 0x33, 0x0e, 0xf2, 0x03, 0xf0, 0x94, 0x49, 0xbc,
	0xf3, 0x9a, 0x00, 0x27, 0x05, 0x09, 0x15, 0x71, 0xf3, 0xc1, 0x9b, 0xc5, 0x45, 0x1d, 0x77, 0x5c,
	0x95, 0x87, 0x2d, 0x2e, 0xfe, 0xee, 0x32, 0x3d, 0x0c, 0xc8, 0xaa, 0xa7, 0xa9, 0x5d, 0xa6, 0xa9,
	0xa4, 0x2f, 0xfd, 0xdc, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x95, 0xbe, 0x48, 0xf2, 0x00, 0x00,
	0x00,
}
