// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task_stats.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskStats struct {
	TaskId    uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Hostname  string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// CPU stats in millicores.
	CpuLimit   int64 `protobuf:"varint,4,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
	CpuRequest int64 `protobuf:"varint,5,opt,name=cpu_request,json=cpuRequest,proto3" json:"cpu_request,omitempty"`
	CpuUsage   int64 `protobuf:"varint,6,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// Memory stats in Kb.
	MemLimit            int64   `protobuf:"varint,7,opt,name=mem_limit,json=memLimit,proto3" json:"mem_limit,omitempty"`
	MemRequest          int64   `protobuf:"varint,8,opt,name=mem_request,json=memRequest,proto3" json:"mem_request,omitempty"`
	MemUsage            int64   `protobuf:"varint,9,opt,name=mem_usage,json=memUsage,proto3" json:"mem_usage,omitempty"`
	MemRss              int64   `protobuf:"varint,10,opt,name=mem_rss,json=memRss,proto3" json:"mem_rss,omitempty"`
	MemCache            int64   `protobuf:"varint,11,opt,name=mem_cache,json=memCache,proto3" json:"mem_cache,omitempty"`
	MemWorkingSet       int64   `protobuf:"varint,12,opt,name=mem_working_set,json=memWorkingSet,proto3" json:"mem_working_set,omitempty"`
	MemPageFaults       int64   `protobuf:"varint,13,opt,name=mem_page_faults,json=memPageFaults,proto3" json:"mem_page_faults,omitempty"`
	MemPageFaultsRate   float64 `protobuf:"fixed64,14,opt,name=mem_page_faults_rate,json=memPageFaultsRate,proto3" json:"mem_page_faults_rate,omitempty"`
	MajorPageFaults     int64   `protobuf:"varint,15,opt,name=major_page_faults,json=majorPageFaults,proto3" json:"major_page_faults,omitempty"`
	MajorPageFaultsRate float64 `protobuf:"fixed64,16,opt,name=major_page_faults_rate,json=majorPageFaultsRate,proto3" json:"major_page_faults_rate,omitempty"`
	// Network stats in Kb.
	NetRx                int64    `protobuf:"varint,17,opt,name=net_rx,json=netRx,proto3" json:"net_rx,omitempty"`
	NetRxErrors          int64    `protobuf:"varint,18,opt,name=net_rx_errors,json=netRxErrors,proto3" json:"net_rx_errors,omitempty"`
	NetRxErrorsRate      float64  `protobuf:"fixed64,19,opt,name=net_rx_errors_rate,json=netRxErrorsRate,proto3" json:"net_rx_errors_rate,omitempty"`
	NetRxRate            float64  `protobuf:"fixed64,20,opt,name=net_rx_rate,json=netRxRate,proto3" json:"net_rx_rate,omitempty"`
	NetTx                int64    `protobuf:"varint,21,opt,name=net_tx,json=netTx,proto3" json:"net_tx,omitempty"`
	NetTxErrors          int64    `protobuf:"varint,22,opt,name=net_tx_errors,json=netTxErrors,proto3" json:"net_tx_errors,omitempty"`
	NetTxErrorsRate      float64  `protobuf:"fixed64,23,opt,name=net_tx_errors_rate,json=netTxErrorsRate,proto3" json:"net_tx_errors_rate,omitempty"`
	NetTxRate            float64  `protobuf:"fixed64,24,opt,name=net_tx_rate,json=netTxRate,proto3" json:"net_tx_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskStats) Reset()         { *m = TaskStats{} }
func (m *TaskStats) String() string { return proto.CompactTextString(m) }
func (*TaskStats) ProtoMessage()    {}
func (*TaskStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f3ecbfd86ea0c9c, []int{0}
}

func (m *TaskStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStats.Unmarshal(m, b)
}
func (m *TaskStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStats.Marshal(b, m, deterministic)
}
func (m *TaskStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStats.Merge(m, src)
}
func (m *TaskStats) XXX_Size() int {
	return xxx_messageInfo_TaskStats.Size(m)
}
func (m *TaskStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStats.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStats proto.InternalMessageInfo

func (m *TaskStats) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *TaskStats) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *TaskStats) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TaskStats) GetCpuLimit() int64 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *TaskStats) GetCpuRequest() int64 {
	if m != nil {
		return m.CpuRequest
	}
	return 0
}

func (m *TaskStats) GetCpuUsage() int64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *TaskStats) GetMemLimit() int64 {
	if m != nil {
		return m.MemLimit
	}
	return 0
}

func (m *TaskStats) GetMemRequest() int64 {
	if m != nil {
		return m.MemRequest
	}
	return 0
}

func (m *TaskStats) GetMemUsage() int64 {
	if m != nil {
		return m.MemUsage
	}
	return 0
}

func (m *TaskStats) GetMemRss() int64 {
	if m != nil {
		return m.MemRss
	}
	return 0
}

func (m *TaskStats) GetMemCache() int64 {
	if m != nil {
		return m.MemCache
	}
	return 0
}

func (m *TaskStats) GetMemWorkingSet() int64 {
	if m != nil {
		return m.MemWorkingSet
	}
	return 0
}

func (m *TaskStats) GetMemPageFaults() int64 {
	if m != nil {
		return m.MemPageFaults
	}
	return 0
}

func (m *TaskStats) GetMemPageFaultsRate() float64 {
	if m != nil {
		return m.MemPageFaultsRate
	}
	return 0
}

func (m *TaskStats) GetMajorPageFaults() int64 {
	if m != nil {
		return m.MajorPageFaults
	}
	return 0
}

func (m *TaskStats) GetMajorPageFaultsRate() float64 {
	if m != nil {
		return m.MajorPageFaultsRate
	}
	return 0
}

func (m *TaskStats) GetNetRx() int64 {
	if m != nil {
		return m.NetRx
	}
	return 0
}

func (m *TaskStats) GetNetRxErrors() int64 {
	if m != nil {
		return m.NetRxErrors
	}
	return 0
}

func (m *TaskStats) GetNetRxErrorsRate() float64 {
	if m != nil {
		return m.NetRxErrorsRate
	}
	return 0
}

func (m *TaskStats) GetNetRxRate() float64 {
	if m != nil {
		return m.NetRxRate
	}
	return 0
}

func (m *TaskStats) GetNetTx() int64 {
	if m != nil {
		return m.NetTx
	}
	return 0
}

func (m *TaskStats) GetNetTxErrors() int64 {
	if m != nil {
		return m.NetTxErrors
	}
	return 0
}

func (m *TaskStats) GetNetTxErrorsRate() float64 {
	if m != nil {
		return m.NetTxErrorsRate
	}
	return 0
}

func (m *TaskStats) GetNetTxRate() float64 {
	if m != nil {
		return m.NetTxRate
	}
	return 0
}

func init() {
	proto.RegisterType((*TaskStats)(nil), "proto.TaskStats")
}

func init() { proto.RegisterFile("task_stats.proto", fileDescriptor_7f3ecbfd86ea0c9c) }

var fileDescriptor_7f3ecbfd86ea0c9c = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x65, 0xda, 0x38, 0xf1, 0x84, 0x90, 0x66, 0xfb, 0x27, 0x2b, 0x40, 0x10, 0xf5, 0x80,
	0x22, 0x90, 0xe0, 0xd0, 0x8f, 0x80, 0x40, 0x42, 0xe2, 0x80, 0x5c, 0x23, 0x8e, 0xd6, 0xe2, 0x0e,
	0xa9, 0x49, 0xd6, 0x36, 0xbb, 0x63, 0x91, 0x0f, 0xc7, 0x87, 0x43, 0x3b, 0x1b, 0x2f, 0x76, 0xe8,
	0xc9, 0x9a, 0xf7, 0x7e, 0xef, 0xed, 0xbb, 0x18, 0xce, 0x48, 0xd9, 0x6d, 0x6e, 0x49, 0x91, 0x7d,
	0xdb, 0x98, 0x9a, 0x6a, 0x31, 0xe2, 0xcf, 0xf5, 0x9f, 0x18, 0x92, 0x4c, 0xd9, 0xed, 0xad, 0xb3,
	0xc4, 0x12, 0xc6, 0x0c, 0x96, 0x77, 0x32, 0x5a, 0x45, 0xeb, 0xd3, 0x34, 0x76, 0xe7, 0xa7, 0x3b,
	0xf1, 0x14, 0x26, 0xf7, 0xb5, 0xa5, 0x4a, 0x69, 0x94, 0x8f, 0x56, 0xd1, 0x3a, 0x49, 0xc3, 0x2d,
	0x9e, 0x43, 0x42, 0xa5, 0x46, 0x4b, 0x4a, 0x37, 0xf2, 0x84, 0x63, 0xff, 0x04, 0xf1, 0x0c, 0x92,
	0xa2, 0x69, 0xf3, 0x5d, 0xa9, 0x4b, 0x92, 0xa7, 0xab, 0x68, 0x7d, 0x92, 0x4e, 0x8a, 0xa6, 0xfd,
	0xec, 0x6e, 0xf1, 0x12, 0xa6, 0xce, 0x34, 0xf8, 0xab, 0x45, 0x4b, 0x72, 0xc4, 0x36, 0x14, 0x4d,
	0x9b, 0x7a, 0xa5, 0x4b, 0xb7, 0x56, 0x6d, 0x50, 0xc6, 0x21, 0xfd, 0xd5, 0xdd, 0xce, 0xd4, 0xa8,
	0x0f, 0xd5, 0x63, 0x6f, 0x6a, 0xd4, 0xa1, 0xda, 0x99, 0x5d, 0xf5, 0xc4, 0x57, 0x6b, 0xd4, 0xbd,
	0x6a, 0x07, 0xf8, 0xea, 0x24, 0xa4, 0x7d, 0xf5, 0x12, 0xc6, 0x9c, 0xb6, 0x56, 0x02, 0x5b, 0xb1,
	0x4b, 0x5a, 0xdb, 0xa5, 0x0a, 0x55, 0xdc, 0xa3, 0x9c, 0x86, 0xd4, 0x7b, 0x77, 0x8b, 0x57, 0x30,
	0x77, 0xe6, 0xef, 0xda, 0x6c, 0xcb, 0x6a, 0x93, 0x5b, 0x24, 0xf9, 0x98, 0x91, 0x99, 0x46, 0xfd,
	0xcd, 0xab, 0xb7, 0x48, 0x1d, 0xd7, 0xa8, 0x0d, 0xe6, 0x3f, 0x54, 0xbb, 0x23, 0x2b, 0x67, 0x81,
	0xfb, 0xa2, 0x36, 0xf8, 0x91, 0x45, 0xf1, 0x0e, 0x2e, 0x8e, 0xb8, 0xdc, 0x28, 0x42, 0xf9, 0x64,
	0x15, 0xad, 0xa3, 0x74, 0x31, 0x80, 0x53, 0x45, 0x28, 0x5e, 0xc3, 0x42, 0xab, 0x9f, 0xb5, 0x19,
	0x54, 0xcf, 0xb9, 0x7a, 0xce, 0x46, 0xaf, 0xfc, 0x06, 0xae, 0xfe, 0x63, 0x7d, 0xfd, 0x19, 0xd7,
	0x9f, 0x1f, 0x05, 0xf8, 0x81, 0x4b, 0x88, 0x2b, 0xa4, 0xdc, 0xec, 0xe5, 0x82, 0x5b, 0x47, 0x15,
	0x52, 0xba, 0x17, 0xd7, 0x30, 0xf3, 0x72, 0x8e, 0xc6, 0xd4, 0xc6, 0x4a, 0xc1, 0xee, 0x94, 0xdd,
	0x0f, 0x2c, 0x89, 0x37, 0x20, 0x06, 0x8c, 0x7f, 0xeb, 0x9c, 0xdf, 0x9a, 0xf7, 0x40, 0x7e, 0xe7,
	0x05, 0x4c, 0x0f, 0x30, 0x53, 0x17, 0x4c, 0x25, 0x4c, 0xf5, 0x77, 0xd0, 0x5e, 0x5e, 0x86, 0x1d,
	0x59, 0xd8, 0x41, 0x61, 0xc7, 0x55, 0xd8, 0x91, 0x1d, 0xed, 0xa0, 0xe1, 0x8e, 0x65, 0xd8, 0x91,
	0x3d, 0xb0, 0x83, 0x0e, 0x3b, 0x64, 0xd8, 0x91, 0xf1, 0x8e, 0xef, 0x31, 0xff, 0x45, 0x37, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xe6, 0x0c, 0xff, 0x60, 0x03, 0x00, 0x00,
}
