// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reference_desc.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReferenceDescriptor_ReferenceType int32

const (
	ReferenceDescriptor_TOMBSTONE ReferenceDescriptor_ReferenceType = 0
	ReferenceDescriptor_FUTURE    ReferenceDescriptor_ReferenceType = 1
	ReferenceDescriptor_CONCRETE  ReferenceDescriptor_ReferenceType = 2
	ReferenceDescriptor_STREAM    ReferenceDescriptor_ReferenceType = 3
	ReferenceDescriptor_VALUE     ReferenceDescriptor_ReferenceType = 4
	ReferenceDescriptor_ERROR     ReferenceDescriptor_ReferenceType = 5
)

var ReferenceDescriptor_ReferenceType_name = map[int32]string{
	0: "TOMBSTONE",
	1: "FUTURE",
	2: "CONCRETE",
	3: "STREAM",
	4: "VALUE",
	5: "ERROR",
}

var ReferenceDescriptor_ReferenceType_value = map[string]int32{
	"TOMBSTONE": 0,
	"FUTURE":    1,
	"CONCRETE":  2,
	"STREAM":    3,
	"VALUE":     4,
	"ERROR":     5,
}

func (x ReferenceDescriptor_ReferenceType) String() string {
	return proto.EnumName(ReferenceDescriptor_ReferenceType_name, int32(x))
}

func (ReferenceDescriptor_ReferenceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6a3305e4ee4d766, []int{0, 0}
}

type ReferenceDescriptor_ReferenceScope int32

const (
	// TODO(malte): really encode like this?
	ReferenceDescriptor_PUBLIC  ReferenceDescriptor_ReferenceScope = 0
	ReferenceDescriptor_PRIVATE ReferenceDescriptor_ReferenceScope = 1
)

var ReferenceDescriptor_ReferenceScope_name = map[int32]string{
	0: "PUBLIC",
	1: "PRIVATE",
}

var ReferenceDescriptor_ReferenceScope_value = map[string]int32{
	"PUBLIC":  0,
	"PRIVATE": 1,
}

func (x ReferenceDescriptor_ReferenceScope) String() string {
	return proto.EnumName(ReferenceDescriptor_ReferenceScope_name, int32(x))
}

func (ReferenceDescriptor_ReferenceScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6a3305e4ee4d766, []int{0, 1}
}

type ReferenceDescriptor struct {
	Id                   []byte                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 ReferenceDescriptor_ReferenceType  `protobuf:"varint,2,opt,name=type,proto3,enum=proto.ReferenceDescriptor_ReferenceType" json:"type,omitempty"`
	Scope                ReferenceDescriptor_ReferenceScope `protobuf:"varint,3,opt,name=scope,proto3,enum=proto.ReferenceDescriptor_ReferenceScope" json:"scope,omitempty"`
	NonDeterministic     bool                               `protobuf:"varint,4,opt,name=non_deterministic,json=nonDeterministic,proto3" json:"non_deterministic,omitempty"`
	Size                 uint64                             `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Location             string                             `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	InlineData           []byte                             `protobuf:"bytes,7,opt,name=inline_data,json=inlineData,proto3" json:"inline_data,omitempty"`
	ProducingTask        uint64                             `protobuf:"varint,8,opt,name=producing_task,json=producingTask,proto3" json:"producing_task,omitempty"`
	TimeToCompute        uint64                             `protobuf:"varint,9,opt,name=time_to_compute,json=timeToCompute,proto3" json:"time_to_compute,omitempty"`
	Version              uint64                             `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ReferenceDescriptor) Reset()         { *m = ReferenceDescriptor{} }
func (m *ReferenceDescriptor) String() string { return proto.CompactTextString(m) }
func (*ReferenceDescriptor) ProtoMessage()    {}
func (*ReferenceDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6a3305e4ee4d766, []int{0}
}

func (m *ReferenceDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceDescriptor.Unmarshal(m, b)
}
func (m *ReferenceDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceDescriptor.Marshal(b, m, deterministic)
}
func (m *ReferenceDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceDescriptor.Merge(m, src)
}
func (m *ReferenceDescriptor) XXX_Size() int {
	return xxx_messageInfo_ReferenceDescriptor.Size(m)
}
func (m *ReferenceDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceDescriptor proto.InternalMessageInfo

func (m *ReferenceDescriptor) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ReferenceDescriptor) GetType() ReferenceDescriptor_ReferenceType {
	if m != nil {
		return m.Type
	}
	return ReferenceDescriptor_TOMBSTONE
}

func (m *ReferenceDescriptor) GetScope() ReferenceDescriptor_ReferenceScope {
	if m != nil {
		return m.Scope
	}
	return ReferenceDescriptor_PUBLIC
}

func (m *ReferenceDescriptor) GetNonDeterministic() bool {
	if m != nil {
		return m.NonDeterministic
	}
	return false
}

func (m *ReferenceDescriptor) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ReferenceDescriptor) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *ReferenceDescriptor) GetInlineData() []byte {
	if m != nil {
		return m.InlineData
	}
	return nil
}

func (m *ReferenceDescriptor) GetProducingTask() uint64 {
	if m != nil {
		return m.ProducingTask
	}
	return 0
}

func (m *ReferenceDescriptor) GetTimeToCompute() uint64 {
	if m != nil {
		return m.TimeToCompute
	}
	return 0
}

func (m *ReferenceDescriptor) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.ReferenceDescriptor_ReferenceType", ReferenceDescriptor_ReferenceType_name, ReferenceDescriptor_ReferenceType_value)
	proto.RegisterEnum("proto.ReferenceDescriptor_ReferenceScope", ReferenceDescriptor_ReferenceScope_name, ReferenceDescriptor_ReferenceScope_value)
	proto.RegisterType((*ReferenceDescriptor)(nil), "proto.ReferenceDescriptor")
}

func init() { proto.RegisterFile("reference_desc.proto", fileDescriptor_e6a3305e4ee4d766) }

var fileDescriptor_e6a3305e4ee4d766 = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x6b, 0xdb, 0x30,
	0x14, 0xc7, 0xeb, 0xd4, 0xce, 0x8f, 0xd7, 0x26, 0xd3, 0xde, 0x76, 0x10, 0xbb, 0xcc, 0x04, 0x36,
	0x5c, 0x06, 0x3d, 0x6c, 0xd7, 0xc1, 0x48, 0x13, 0x0f, 0x0a, 0x6d, 0x53, 0x14, 0xa5, 0x87, 0x5d,
	0x8c, 0x27, 0xbf, 0x0d, 0xd1, 0x46, 0x32, 0x92, 0x3a, 0xe8, 0xfe, 0x8c, 0xfd, 0xc5, 0xc3, 0x32,
	0xed, 0x16, 0xd8, 0x61, 0x27, 0xbf, 0xf7, 0xf9, 0xfa, 0xf3, 0x90, 0x9e, 0xe0, 0xa5, 0xa3, 0x6f,
	0xe4, 0xc8, 0x28, 0xaa, 0x1a, 0xf2, 0xea, 0xb4, 0x75, 0x36, 0x58, 0xcc, 0xe2, 0x67, 0xfe, 0x2b,
	0x85, 0x17, 0xe2, 0x31, 0x5f, 0x91, 0x57, 0x4e, 0xb7, 0xc1, 0x3a, 0x9c, 0xc1, 0x40, 0x37, 0x3c,
	0xc9, 0x93, 0xe2, 0x58, 0x0c, 0x74, 0x83, 0x1f, 0x21, 0x0d, 0x0f, 0x2d, 0xf1, 0x41, 0x9e, 0x14,
	0xb3, 0xf7, 0x45, 0x3f, 0xe4, 0xf4, 0x1f, 0xe6, 0x1f, 0x26, 0x1f, 0x5a, 0x12, 0xd1, 0xc2, 0x4f,
	0x90, 0x79, 0x65, 0x5b, 0xe2, 0x87, 0x51, 0x3f, 0xf9, 0x1f, 0x7d, 0xd3, 0x09, 0xa2, 0xf7, 0xf0,
	0x1d, 0x3c, 0x37, 0xd6, 0x54, 0x0d, 0x05, 0x72, 0x3b, 0x6d, 0xb4, 0x0f, 0x5a, 0xf1, 0x34, 0x4f,
	0x8a, 0xb1, 0x60, 0xc6, 0x9a, 0xd5, 0xdf, 0x1c, 0x11, 0x52, 0xaf, 0x7f, 0x12, 0xcf, 0xf2, 0xa4,
	0x48, 0x45, 0xac, 0xf1, 0x15, 0x8c, 0xef, 0xac, 0xaa, 0x83, 0xb6, 0x86, 0x0f, 0xf3, 0xa4, 0x98,
	0x88, 0xa7, 0x1e, 0x5f, 0xc3, 0x91, 0x36, 0x77, 0xda, 0x50, 0xd5, 0xd4, 0xa1, 0xe6, 0xa3, 0x78,
	0x69, 0xe8, 0xd1, 0xaa, 0x0e, 0x35, 0xbe, 0x81, 0x59, 0xeb, 0x6c, 0x73, 0xaf, 0xb4, 0xf9, 0x5e,
	0x85, 0xda, 0xdf, 0xf2, 0x71, 0x1c, 0x3d, 0x7d, 0xa2, 0xb2, 0xf6, 0xb7, 0xf8, 0x16, 0x9e, 0x05,
	0xbd, 0xa3, 0x2a, 0xd8, 0x4a, 0xd9, 0x5d, 0x7b, 0x1f, 0x88, 0x4f, 0xfa, 0xff, 0x3a, 0x2c, 0xed,
	0xb2, 0x87, 0xc8, 0x61, 0xf4, 0x83, 0x9c, 0xef, 0x8e, 0x02, 0x31, 0x7f, 0x6c, 0xe7, 0x5f, 0x60,
	0xba, 0xb7, 0x3e, 0x9c, 0xc2, 0x44, 0xae, 0x2f, 0xcf, 0x36, 0x72, 0x7d, 0x55, 0xb2, 0x03, 0x04,
	0x18, 0x7e, 0xde, 0xca, 0xad, 0x28, 0x59, 0x82, 0xc7, 0x30, 0x5e, 0xae, 0xaf, 0x96, 0xa2, 0x94,
	0x25, 0x1b, 0x74, 0xc9, 0x46, 0x8a, 0x72, 0x71, 0xc9, 0x0e, 0x71, 0x02, 0xd9, 0xcd, 0xe2, 0x62,
	0x5b, 0xb2, 0xb4, 0x2b, 0x4b, 0x21, 0xd6, 0x82, 0x65, 0xf3, 0x13, 0x98, 0xed, 0xef, 0xb6, 0x73,
	0xae, 0xb7, 0x67, 0x17, 0xe7, 0x4b, 0x76, 0x80, 0x47, 0x30, 0xba, 0x16, 0xe7, 0x37, 0x0b, 0x59,
	0xb2, 0xe4, 0xeb, 0x30, 0x3e, 0xcf, 0x87, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x74, 0xc7, 0xca,
	0x49, 0x3a, 0x02, 0x00, 0x00,
}
