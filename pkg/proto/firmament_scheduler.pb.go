// Code generated by protoc-gen-go. DO NOT EDIT.
// source: firmament_scheduler.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskReplyType int32

const (
	TaskReplyType_TASK_COMPLETED_OK      TaskReplyType = 0
	TaskReplyType_TASK_SUBMITTED_OK      TaskReplyType = 1
	TaskReplyType_TASK_REMOVED_OK        TaskReplyType = 2
	TaskReplyType_TASK_FAILED_OK         TaskReplyType = 3
	TaskReplyType_TASK_UPDATED_OK        TaskReplyType = 4
	TaskReplyType_TASK_NOT_FOUND         TaskReplyType = 5
	TaskReplyType_TASK_JOB_NOT_FOUND     TaskReplyType = 6
	TaskReplyType_TASK_ALREADY_SUBMITTED TaskReplyType = 7
	TaskReplyType_TASK_STATE_NOT_CREATED TaskReplyType = 8
)

var TaskReplyType_name = map[int32]string{
	0: "TASK_COMPLETED_OK",
	1: "TASK_SUBMITTED_OK",
	2: "TASK_REMOVED_OK",
	3: "TASK_FAILED_OK",
	4: "TASK_UPDATED_OK",
	5: "TASK_NOT_FOUND",
	6: "TASK_JOB_NOT_FOUND",
	7: "TASK_ALREADY_SUBMITTED",
	8: "TASK_STATE_NOT_CREATED",
}

var TaskReplyType_value = map[string]int32{
	"TASK_COMPLETED_OK":      0,
	"TASK_SUBMITTED_OK":      1,
	"TASK_REMOVED_OK":        2,
	"TASK_FAILED_OK":         3,
	"TASK_UPDATED_OK":        4,
	"TASK_NOT_FOUND":         5,
	"TASK_JOB_NOT_FOUND":     6,
	"TASK_ALREADY_SUBMITTED": 7,
	"TASK_STATE_NOT_CREATED": 8,
}

func (x TaskReplyType) String() string {
	return proto.EnumName(TaskReplyType_name, int32(x))
}

func (TaskReplyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{0}
}

type NodeReplyType int32

const (
	NodeReplyType_NODE_ADDED_OK       NodeReplyType = 0
	NodeReplyType_NODE_FAILED_OK      NodeReplyType = 1
	NodeReplyType_NODE_REMOVED_OK     NodeReplyType = 2
	NodeReplyType_NODE_UPDATED_OK     NodeReplyType = 3
	NodeReplyType_NODE_NOT_FOUND      NodeReplyType = 4
	NodeReplyType_NODE_ALREADY_EXISTS NodeReplyType = 5
)

var NodeReplyType_name = map[int32]string{
	0: "NODE_ADDED_OK",
	1: "NODE_FAILED_OK",
	2: "NODE_REMOVED_OK",
	3: "NODE_UPDATED_OK",
	4: "NODE_NOT_FOUND",
	5: "NODE_ALREADY_EXISTS",
}

var NodeReplyType_value = map[string]int32{
	"NODE_ADDED_OK":       0,
	"NODE_FAILED_OK":      1,
	"NODE_REMOVED_OK":     2,
	"NODE_UPDATED_OK":     3,
	"NODE_NOT_FOUND":      4,
	"NODE_ALREADY_EXISTS": 5,
}

func (x NodeReplyType) String() string {
	return proto.EnumName(NodeReplyType_name, int32(x))
}

func (NodeReplyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{1}
}

type ScheduleRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleRequest) Reset()         { *m = ScheduleRequest{} }
func (m *ScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleRequest) ProtoMessage()    {}
func (*ScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{0}
}

func (m *ScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleRequest.Unmarshal(m, b)
}
func (m *ScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleRequest.Marshal(b, m, deterministic)
}
func (m *ScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleRequest.Merge(m, src)
}
func (m *ScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleRequest.Size(m)
}
func (m *ScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleRequest proto.InternalMessageInfo

type SchedulingDeltas struct {
	Deltas               []*SchedulingDelta `protobuf:"bytes,1,rep,name=deltas,proto3" json:"deltas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SchedulingDeltas) Reset()         { *m = SchedulingDeltas{} }
func (m *SchedulingDeltas) String() string { return proto.CompactTextString(m) }
func (*SchedulingDeltas) ProtoMessage()    {}
func (*SchedulingDeltas) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{1}
}

func (m *SchedulingDeltas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulingDeltas.Unmarshal(m, b)
}
func (m *SchedulingDeltas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulingDeltas.Marshal(b, m, deterministic)
}
func (m *SchedulingDeltas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulingDeltas.Merge(m, src)
}
func (m *SchedulingDeltas) XXX_Size() int {
	return xxx_messageInfo_SchedulingDeltas.Size(m)
}
func (m *SchedulingDeltas) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulingDeltas.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulingDeltas proto.InternalMessageInfo

func (m *SchedulingDeltas) GetDeltas() []*SchedulingDelta {
	if m != nil {
		return m.Deltas
	}
	return nil
}

type TaskCompletedResponse struct {
	Type                 TaskReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.TaskReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TaskCompletedResponse) Reset()         { *m = TaskCompletedResponse{} }
func (m *TaskCompletedResponse) String() string { return proto.CompactTextString(m) }
func (*TaskCompletedResponse) ProtoMessage()    {}
func (*TaskCompletedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{2}
}

func (m *TaskCompletedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskCompletedResponse.Unmarshal(m, b)
}
func (m *TaskCompletedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskCompletedResponse.Marshal(b, m, deterministic)
}
func (m *TaskCompletedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskCompletedResponse.Merge(m, src)
}
func (m *TaskCompletedResponse) XXX_Size() int {
	return xxx_messageInfo_TaskCompletedResponse.Size(m)
}
func (m *TaskCompletedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskCompletedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskCompletedResponse proto.InternalMessageInfo

func (m *TaskCompletedResponse) GetType() TaskReplyType {
	if m != nil {
		return m.Type
	}
	return TaskReplyType_TASK_COMPLETED_OK
}

type TaskDescription struct {
	TaskDescriptor       *TaskDescriptor `protobuf:"bytes,1,opt,name=task_descriptor,json=taskDescriptor,proto3" json:"task_descriptor,omitempty"`
	JobDescriptor        *JobDescriptor  `protobuf:"bytes,2,opt,name=job_descriptor,json=jobDescriptor,proto3" json:"job_descriptor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TaskDescription) Reset()         { *m = TaskDescription{} }
func (m *TaskDescription) String() string { return proto.CompactTextString(m) }
func (*TaskDescription) ProtoMessage()    {}
func (*TaskDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{3}
}

func (m *TaskDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDescription.Unmarshal(m, b)
}
func (m *TaskDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDescription.Marshal(b, m, deterministic)
}
func (m *TaskDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDescription.Merge(m, src)
}
func (m *TaskDescription) XXX_Size() int {
	return xxx_messageInfo_TaskDescription.Size(m)
}
func (m *TaskDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDescription.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDescription proto.InternalMessageInfo

func (m *TaskDescription) GetTaskDescriptor() *TaskDescriptor {
	if m != nil {
		return m.TaskDescriptor
	}
	return nil
}

func (m *TaskDescription) GetJobDescriptor() *JobDescriptor {
	if m != nil {
		return m.JobDescriptor
	}
	return nil
}

type TaskSubmittedResponse struct {
	Type                 TaskReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.TaskReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TaskSubmittedResponse) Reset()         { *m = TaskSubmittedResponse{} }
func (m *TaskSubmittedResponse) String() string { return proto.CompactTextString(m) }
func (*TaskSubmittedResponse) ProtoMessage()    {}
func (*TaskSubmittedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{4}
}

func (m *TaskSubmittedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskSubmittedResponse.Unmarshal(m, b)
}
func (m *TaskSubmittedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskSubmittedResponse.Marshal(b, m, deterministic)
}
func (m *TaskSubmittedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskSubmittedResponse.Merge(m, src)
}
func (m *TaskSubmittedResponse) XXX_Size() int {
	return xxx_messageInfo_TaskSubmittedResponse.Size(m)
}
func (m *TaskSubmittedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskSubmittedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskSubmittedResponse proto.InternalMessageInfo

func (m *TaskSubmittedResponse) GetType() TaskReplyType {
	if m != nil {
		return m.Type
	}
	return TaskReplyType_TASK_COMPLETED_OK
}

type TaskRemovedResponse struct {
	Type                 TaskReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.TaskReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TaskRemovedResponse) Reset()         { *m = TaskRemovedResponse{} }
func (m *TaskRemovedResponse) String() string { return proto.CompactTextString(m) }
func (*TaskRemovedResponse) ProtoMessage()    {}
func (*TaskRemovedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{5}
}

func (m *TaskRemovedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskRemovedResponse.Unmarshal(m, b)
}
func (m *TaskRemovedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskRemovedResponse.Marshal(b, m, deterministic)
}
func (m *TaskRemovedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskRemovedResponse.Merge(m, src)
}
func (m *TaskRemovedResponse) XXX_Size() int {
	return xxx_messageInfo_TaskRemovedResponse.Size(m)
}
func (m *TaskRemovedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskRemovedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskRemovedResponse proto.InternalMessageInfo

func (m *TaskRemovedResponse) GetType() TaskReplyType {
	if m != nil {
		return m.Type
	}
	return TaskReplyType_TASK_COMPLETED_OK
}

type TaskFailedResponse struct {
	Type                 TaskReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.TaskReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TaskFailedResponse) Reset()         { *m = TaskFailedResponse{} }
func (m *TaskFailedResponse) String() string { return proto.CompactTextString(m) }
func (*TaskFailedResponse) ProtoMessage()    {}
func (*TaskFailedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{6}
}

func (m *TaskFailedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskFailedResponse.Unmarshal(m, b)
}
func (m *TaskFailedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskFailedResponse.Marshal(b, m, deterministic)
}
func (m *TaskFailedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskFailedResponse.Merge(m, src)
}
func (m *TaskFailedResponse) XXX_Size() int {
	return xxx_messageInfo_TaskFailedResponse.Size(m)
}
func (m *TaskFailedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskFailedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskFailedResponse proto.InternalMessageInfo

func (m *TaskFailedResponse) GetType() TaskReplyType {
	if m != nil {
		return m.Type
	}
	return TaskReplyType_TASK_COMPLETED_OK
}

type TaskUpdatedResponse struct {
	Type                 TaskReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.TaskReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TaskUpdatedResponse) Reset()         { *m = TaskUpdatedResponse{} }
func (m *TaskUpdatedResponse) String() string { return proto.CompactTextString(m) }
func (*TaskUpdatedResponse) ProtoMessage()    {}
func (*TaskUpdatedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{7}
}

func (m *TaskUpdatedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskUpdatedResponse.Unmarshal(m, b)
}
func (m *TaskUpdatedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskUpdatedResponse.Marshal(b, m, deterministic)
}
func (m *TaskUpdatedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskUpdatedResponse.Merge(m, src)
}
func (m *TaskUpdatedResponse) XXX_Size() int {
	return xxx_messageInfo_TaskUpdatedResponse.Size(m)
}
func (m *TaskUpdatedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskUpdatedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskUpdatedResponse proto.InternalMessageInfo

func (m *TaskUpdatedResponse) GetType() TaskReplyType {
	if m != nil {
		return m.Type
	}
	return TaskReplyType_TASK_COMPLETED_OK
}

type NodeAddedResponse struct {
	Type                 NodeReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.NodeReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeAddedResponse) Reset()         { *m = NodeAddedResponse{} }
func (m *NodeAddedResponse) String() string { return proto.CompactTextString(m) }
func (*NodeAddedResponse) ProtoMessage()    {}
func (*NodeAddedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{8}
}

func (m *NodeAddedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeAddedResponse.Unmarshal(m, b)
}
func (m *NodeAddedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeAddedResponse.Marshal(b, m, deterministic)
}
func (m *NodeAddedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeAddedResponse.Merge(m, src)
}
func (m *NodeAddedResponse) XXX_Size() int {
	return xxx_messageInfo_NodeAddedResponse.Size(m)
}
func (m *NodeAddedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeAddedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeAddedResponse proto.InternalMessageInfo

func (m *NodeAddedResponse) GetType() NodeReplyType {
	if m != nil {
		return m.Type
	}
	return NodeReplyType_NODE_ADDED_OK
}

type NodeRemovedResponse struct {
	Type                 NodeReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.NodeReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeRemovedResponse) Reset()         { *m = NodeRemovedResponse{} }
func (m *NodeRemovedResponse) String() string { return proto.CompactTextString(m) }
func (*NodeRemovedResponse) ProtoMessage()    {}
func (*NodeRemovedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{9}
}

func (m *NodeRemovedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeRemovedResponse.Unmarshal(m, b)
}
func (m *NodeRemovedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeRemovedResponse.Marshal(b, m, deterministic)
}
func (m *NodeRemovedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeRemovedResponse.Merge(m, src)
}
func (m *NodeRemovedResponse) XXX_Size() int {
	return xxx_messageInfo_NodeRemovedResponse.Size(m)
}
func (m *NodeRemovedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeRemovedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeRemovedResponse proto.InternalMessageInfo

func (m *NodeRemovedResponse) GetType() NodeReplyType {
	if m != nil {
		return m.Type
	}
	return NodeReplyType_NODE_ADDED_OK
}

type NodeFailedResponse struct {
	Type                 NodeReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.NodeReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeFailedResponse) Reset()         { *m = NodeFailedResponse{} }
func (m *NodeFailedResponse) String() string { return proto.CompactTextString(m) }
func (*NodeFailedResponse) ProtoMessage()    {}
func (*NodeFailedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{10}
}

func (m *NodeFailedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeFailedResponse.Unmarshal(m, b)
}
func (m *NodeFailedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeFailedResponse.Marshal(b, m, deterministic)
}
func (m *NodeFailedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeFailedResponse.Merge(m, src)
}
func (m *NodeFailedResponse) XXX_Size() int {
	return xxx_messageInfo_NodeFailedResponse.Size(m)
}
func (m *NodeFailedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeFailedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeFailedResponse proto.InternalMessageInfo

func (m *NodeFailedResponse) GetType() NodeReplyType {
	if m != nil {
		return m.Type
	}
	return NodeReplyType_NODE_ADDED_OK
}

type NodeUpdatedResponse struct {
	Type                 NodeReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.NodeReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeUpdatedResponse) Reset()         { *m = NodeUpdatedResponse{} }
func (m *NodeUpdatedResponse) String() string { return proto.CompactTextString(m) }
func (*NodeUpdatedResponse) ProtoMessage()    {}
func (*NodeUpdatedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{11}
}

func (m *NodeUpdatedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeUpdatedResponse.Unmarshal(m, b)
}
func (m *NodeUpdatedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeUpdatedResponse.Marshal(b, m, deterministic)
}
func (m *NodeUpdatedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeUpdatedResponse.Merge(m, src)
}
func (m *NodeUpdatedResponse) XXX_Size() int {
	return xxx_messageInfo_NodeUpdatedResponse.Size(m)
}
func (m *NodeUpdatedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeUpdatedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeUpdatedResponse proto.InternalMessageInfo

func (m *NodeUpdatedResponse) GetType() NodeReplyType {
	if m != nil {
		return m.Type
	}
	return NodeReplyType_NODE_ADDED_OK
}

type TaskStatsResponse struct {
	Type                 TaskReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.TaskReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TaskStatsResponse) Reset()         { *m = TaskStatsResponse{} }
func (m *TaskStatsResponse) String() string { return proto.CompactTextString(m) }
func (*TaskStatsResponse) ProtoMessage()    {}
func (*TaskStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{12}
}

func (m *TaskStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStatsResponse.Unmarshal(m, b)
}
func (m *TaskStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStatsResponse.Marshal(b, m, deterministic)
}
func (m *TaskStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStatsResponse.Merge(m, src)
}
func (m *TaskStatsResponse) XXX_Size() int {
	return xxx_messageInfo_TaskStatsResponse.Size(m)
}
func (m *TaskStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStatsResponse proto.InternalMessageInfo

func (m *TaskStatsResponse) GetType() TaskReplyType {
	if m != nil {
		return m.Type
	}
	return TaskReplyType_TASK_COMPLETED_OK
}

type ResourceStatsResponse struct {
	Type                 NodeReplyType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.NodeReplyType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ResourceStatsResponse) Reset()         { *m = ResourceStatsResponse{} }
func (m *ResourceStatsResponse) String() string { return proto.CompactTextString(m) }
func (*ResourceStatsResponse) ProtoMessage()    {}
func (*ResourceStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{13}
}

func (m *ResourceStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceStatsResponse.Unmarshal(m, b)
}
func (m *ResourceStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceStatsResponse.Marshal(b, m, deterministic)
}
func (m *ResourceStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceStatsResponse.Merge(m, src)
}
func (m *ResourceStatsResponse) XXX_Size() int {
	return xxx_messageInfo_ResourceStatsResponse.Size(m)
}
func (m *ResourceStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceStatsResponse proto.InternalMessageInfo

func (m *ResourceStatsResponse) GetType() NodeReplyType {
	if m != nil {
		return m.Type
	}
	return NodeReplyType_NODE_ADDED_OK
}

type TaskUID struct {
	TaskUid              uint64   `protobuf:"varint,1,opt,name=task_uid,json=taskUid,proto3" json:"task_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskUID) Reset()         { *m = TaskUID{} }
func (m *TaskUID) String() string { return proto.CompactTextString(m) }
func (*TaskUID) ProtoMessage()    {}
func (*TaskUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{14}
}

func (m *TaskUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskUID.Unmarshal(m, b)
}
func (m *TaskUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskUID.Marshal(b, m, deterministic)
}
func (m *TaskUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskUID.Merge(m, src)
}
func (m *TaskUID) XXX_Size() int {
	return xxx_messageInfo_TaskUID.Size(m)
}
func (m *TaskUID) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskUID.DiscardUnknown(m)
}

var xxx_messageInfo_TaskUID proto.InternalMessageInfo

func (m *TaskUID) GetTaskUid() uint64 {
	if m != nil {
		return m.TaskUid
	}
	return 0
}

type ResourceUID struct {
	ResourceUid          string   `protobuf:"bytes,1,opt,name=resource_uid,json=resourceUid,proto3" json:"resource_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceUID) Reset()         { *m = ResourceUID{} }
func (m *ResourceUID) String() string { return proto.CompactTextString(m) }
func (*ResourceUID) ProtoMessage()    {}
func (*ResourceUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc144782636f334d, []int{15}
}

func (m *ResourceUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceUID.Unmarshal(m, b)
}
func (m *ResourceUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceUID.Marshal(b, m, deterministic)
}
func (m *ResourceUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceUID.Merge(m, src)
}
func (m *ResourceUID) XXX_Size() int {
	return xxx_messageInfo_ResourceUID.Size(m)
}
func (m *ResourceUID) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceUID.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceUID proto.InternalMessageInfo

func (m *ResourceUID) GetResourceUid() string {
	if m != nil {
		return m.ResourceUid
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.TaskReplyType", TaskReplyType_name, TaskReplyType_value)
	proto.RegisterEnum("proto.NodeReplyType", NodeReplyType_name, NodeReplyType_value)
	proto.RegisterType((*ScheduleRequest)(nil), "proto.ScheduleRequest")
	proto.RegisterType((*SchedulingDeltas)(nil), "proto.SchedulingDeltas")
	proto.RegisterType((*TaskCompletedResponse)(nil), "proto.TaskCompletedResponse")
	proto.RegisterType((*TaskDescription)(nil), "proto.TaskDescription")
	proto.RegisterType((*TaskSubmittedResponse)(nil), "proto.TaskSubmittedResponse")
	proto.RegisterType((*TaskRemovedResponse)(nil), "proto.TaskRemovedResponse")
	proto.RegisterType((*TaskFailedResponse)(nil), "proto.TaskFailedResponse")
	proto.RegisterType((*TaskUpdatedResponse)(nil), "proto.TaskUpdatedResponse")
	proto.RegisterType((*NodeAddedResponse)(nil), "proto.NodeAddedResponse")
	proto.RegisterType((*NodeRemovedResponse)(nil), "proto.NodeRemovedResponse")
	proto.RegisterType((*NodeFailedResponse)(nil), "proto.NodeFailedResponse")
	proto.RegisterType((*NodeUpdatedResponse)(nil), "proto.NodeUpdatedResponse")
	proto.RegisterType((*TaskStatsResponse)(nil), "proto.TaskStatsResponse")
	proto.RegisterType((*ResourceStatsResponse)(nil), "proto.ResourceStatsResponse")
	proto.RegisterType((*TaskUID)(nil), "proto.TaskUID")
	proto.RegisterType((*ResourceUID)(nil), "proto.ResourceUID")
}

func init() { proto.RegisterFile("firmament_scheduler.proto", fileDescriptor_fc144782636f334d) }

var fileDescriptor_fc144782636f334d = []byte{
	// 814 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x5d, 0x6f, 0xea, 0x46,
	0x10, 0x35, 0x37, 0x84, 0xe4, 0x0e, 0x17, 0x30, 0x93, 0xc0, 0x4d, 0xac, 0x3c, 0x24, 0x56, 0x2b,
	0x45, 0x79, 0x88, 0x2a, 0xfa, 0x54, 0xa5, 0x24, 0x72, 0xb0, 0xa9, 0xc8, 0x07, 0x44, 0xb6, 0xa9,
	0xda, 0x27, 0x0b, 0xf0, 0x36, 0x75, 0x02, 0xd8, 0xb5, 0x4d, 0x25, 0x7e, 0x44, 0xfb, 0xa3, 0xfa,
	0x47, 0xfa, 0x57, 0x2a, 0xaf, 0xed, 0xf5, 0x1a, 0x68, 0x8b, 0xb8, 0x4f, 0x68, 0x8f, 0xe7, 0x1c,
	0x9f, 0x19, 0x33, 0x67, 0xe1, 0xf4, 0x17, 0xc7, 0x9f, 0x8d, 0x66, 0x64, 0x1e, 0x5a, 0xc1, 0xe4,
	0x57, 0x62, 0x2f, 0xa6, 0xc4, 0xbf, 0xf6, 0x7c, 0x37, 0x74, 0x71, 0x9f, 0xfe, 0x48, 0xd5, 0x37,
	0x77, 0x6c, 0xd9, 0x24, 0x98, 0xc4, 0xb0, 0x74, 0xec, 0x93, 0xc0, 0x5d, 0xf8, 0x13, 0x62, 0x05,
	0xe1, 0x28, 0x0c, 0x12, 0xf4, 0x82, 0xa1, 0xa1, 0xeb, 0xb9, 0x53, 0xf7, 0x75, 0x69, 0xcd, 0x5d,
	0x9b, 0xf0, 0xc4, 0x5a, 0x38, 0x0a, 0xde, 0x79, 0x40, 0xa4, 0x00, 0xaf, 0xd2, 0x4c, 0x3c, 0x38,
	0xf3, 0x57, 0xcb, 0x26, 0xd3, 0x70, 0x14, 0xe3, 0x72, 0x1d, 0x6a, 0x46, 0xe2, 0x4e, 0x27, 0xbf,
	0x2d, 0x48, 0x10, 0xca, 0xf7, 0x20, 0x1a, 0xac, 0x58, 0x8d, 0x6a, 0x03, 0xbc, 0x86, 0x12, 0x65,
	0x05, 0x27, 0x85, 0xf3, 0xbd, 0xcb, 0x72, 0xab, 0x19, 0xd3, 0xaf, 0x57, 0x0a, 0xf5, 0xa4, 0x4a,
	0x56, 0xa0, 0x61, 0x8e, 0x82, 0xf7, 0x8e, 0x3b, 0xf3, 0xa6, 0x24, 0x24, 0xb6, 0x4e, 0x02, 0xcf,
	0x9d, 0x07, 0x04, 0x2f, 0xa1, 0x18, 0x2e, 0x3d, 0x72, 0x52, 0x38, 0x2f, 0x5c, 0x56, 0x5b, 0xc7,
	0x89, 0x4c, 0x54, 0xab, 0x13, 0x6f, 0xba, 0x34, 0x97, 0x1e, 0xd1, 0x69, 0x85, 0xfc, 0x67, 0x01,
	0x6a, 0x11, 0xae, 0x92, 0x60, 0xe2, 0x3b, 0x5e, 0xe8, 0xb8, 0x73, 0xbc, 0x85, 0xac, 0xd5, 0x08,
	0x73, 0x7d, 0x2a, 0x54, 0x6e, 0x35, 0x38, 0x21, 0x95, 0x3d, 0xd4, 0xab, 0x61, 0xee, 0x8c, 0x37,
	0xc0, 0x66, 0x9e, 0xd0, 0x3f, 0x50, 0x7a, 0xea, 0xe3, 0xc1, 0x1d, 0x73, 0xec, 0xca, 0x1b, 0x7f,
	0x4c, 0x7b, 0x32, 0x16, 0xe3, 0x99, 0x13, 0xee, 0xd6, 0xd3, 0x1d, 0x1c, 0xc5, 0xf0, 0xcc, 0xfd,
	0x7d, 0x27, 0x81, 0x5b, 0xc0, 0x08, 0xee, 0x8e, 0x9c, 0xe9, 0x97, 0x18, 0x18, 0x7a, 0xf6, 0x68,
	0xb7, 0x0e, 0xda, 0x50, 0xef, 0xbb, 0x36, 0x51, 0x6c, 0xfb, 0x7f, 0xe9, 0x51, 0xdd, 0x86, 0xf7,
	0xc7, 0xf0, 0x36, 0x03, 0xd8, 0x24, 0x70, 0x0b, 0x18, 0xc1, 0x5b, 0x0d, 0xe0, 0x3f, 0x0c, 0x6c,
	0x37, 0x80, 0x4d, 0x02, 0x6d, 0xa8, 0xd3, 0x7f, 0x41, 0xb4, 0x5b, 0x3b, 0xcc, 0x4f, 0x81, 0x86,
	0x9e, 0xec, 0xf3, 0x36, 0x12, 0x9b, 0x1c, 0x7c, 0x05, 0x07, 0xf4, 0x1b, 0xf6, 0x54, 0x3c, 0x85,
	0x43, 0xba, 0x0f, 0x0b, 0xc7, 0xa6, 0xc4, 0xa2, 0x7e, 0x10, 0x9d, 0x87, 0x8e, 0x2d, 0x7f, 0x03,
	0xe5, 0xf4, 0x45, 0x51, 0xe5, 0x05, 0x7c, 0x62, 0x39, 0x92, 0x56, 0x7f, 0xd4, 0xcb, 0x29, 0x36,
	0x74, 0xec, 0xab, 0xbf, 0x0b, 0x50, 0xc9, 0x59, 0xc6, 0x06, 0xd4, 0x4d, 0xc5, 0x78, 0xb4, 0x3a,
	0x83, 0xe7, 0x97, 0x27, 0xcd, 0xd4, 0x54, 0x6b, 0xf0, 0x28, 0x0a, 0x0c, 0x36, 0x86, 0xf7, 0xcf,
	0x3d, 0x33, 0x81, 0x0b, 0x78, 0x04, 0x35, 0x0a, 0xeb, 0xda, 0xf3, 0xe0, 0xc7, 0x18, 0xfc, 0x80,
	0x08, 0x55, 0x0a, 0x76, 0x95, 0xde, 0x53, 0x8c, 0xed, 0xb1, 0xc2, 0xe1, 0x8b, 0xaa, 0x24, 0xec,
	0x22, 0x2b, 0xec, 0x0f, 0x4c, 0xab, 0x3b, 0x18, 0xf6, 0x55, 0x71, 0x1f, 0x9b, 0x80, 0x14, 0x7b,
	0x18, 0xdc, 0x73, 0x78, 0x09, 0x25, 0x68, 0x52, 0x5c, 0x79, 0xd2, 0x35, 0x45, 0xfd, 0x39, 0x33,
	0x22, 0x1e, 0xb0, 0x67, 0x86, 0xa9, 0x98, 0x1a, 0x65, 0x75, 0x74, 0x2d, 0x7a, 0x8d, 0x78, 0x78,
	0xf5, 0x47, 0x01, 0x2a, 0xb9, 0x89, 0x62, 0x1d, 0x2a, 0xfd, 0x81, 0xaa, 0x59, 0x8a, 0xaa, 0xa6,
	0xdd, 0x21, 0x54, 0x29, 0x94, 0x39, 0xa6, 0xad, 0x51, 0x2c, 0xd7, 0x5a, 0x0a, 0x72, 0x6d, 0xec,
	0x31, 0x76, 0x66, 0xb7, 0x88, 0x9f, 0xe1, 0x28, 0x7e, 0x49, 0x62, 0x57, 0xfb, 0xa9, 0x67, 0x98,
	0x86, 0xb8, 0xdf, 0xfa, 0xab, 0x04, 0xd8, 0x4d, 0x6f, 0x89, 0x34, 0x86, 0x7d, 0x6c, 0xc3, 0x61,
	0x7a, 0xc0, 0x95, 0xa0, 0x4d, 0x43, 0x5a, 0xfa, 0xbc, 0x39, 0x80, 0x03, 0x59, 0xc0, 0xbb, 0xf8,
	0x33, 0xb2, 0xec, 0xc5, 0x2a, 0xf7, 0x7f, 0x1c, 0xf6, 0x54, 0xe9, 0x8c, 0x3b, 0xaf, 0x25, 0xb4,
	0x2c, 0xe0, 0x77, 0x00, 0x59, 0xc8, 0xac, 0xb1, 0x4f, 0xb9, 0x73, 0x7e, 0x0d, 0x65, 0x01, 0x6f,
	0xa0, 0xcc, 0x05, 0xdc, 0x1a, 0x57, 0xca, 0x6d, 0x46, 0x2e, 0x03, 0x64, 0x01, 0x7f, 0x88, 0x8d,
	0xb3, 0x80, 0x65, 0xcd, 0xaf, 0x5c, 0x03, 0xb9, 0x06, 0xd6, 0xe2, 0x58, 0x16, 0xb0, 0x13, 0xbb,
	0x48, 0x96, 0xfc, 0x5f, 0x65, 0x78, 0x37, 0x2b, 0x81, 0x20, 0x0b, 0xd8, 0x87, 0x8f, 0x2c, 0xe9,
	0xf0, 0xeb, 0xa4, 0x34, 0x5d, 0x29, 0x33, 0xb9, 0x8a, 0xa3, 0x8a, 0xec, 0x8a, 0x90, 0x4e, 0xb8,
	0xb5, 0xcd, 0x45, 0xa4, 0x2c, 0x60, 0x1b, 0x20, 0x4b, 0x2e, 0xc4, 0x15, 0x41, 0x7e, 0xb2, 0xeb,
	0x01, 0x47, 0xbf, 0x6a, 0x99, 0x4b, 0xce, 0x8d, 0x7c, 0x29, 0x17, 0x1a, 0xab, 0xd3, 0xd5, 0x63,
	0x81, 0x74, 0x28, 0x5b, 0x76, 0xc4, 0x6b, 0xae, 0xcf, 0xe8, 0x7b, 0xf8, 0xa4, 0xd8, 0x36, 0xcb,
	0x43, 0x14, 0xf9, 0x0f, 0x13, 0x21, 0x6c, 0x22, 0x6b, 0x99, 0x29, 0x0b, 0xa8, 0x52, 0x76, 0xa4,
	0x1c, 0xb3, 0x8f, 0x57, 0x2c, 0xc5, 0x0a, 0x67, 0x9b, 0xd0, 0x4c, 0x65, 0x5c, 0xa2, 0x8f, 0xbf,
	0xfd, 0x27, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x8d, 0x21, 0x17, 0x70, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FirmamentSchedulerClient is the client API for FirmamentScheduler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FirmamentSchedulerClient interface {
	Schedule(ctx context.Context, in *ScheduleRequest, opts ...grpc.CallOption) (*SchedulingDeltas, error)
	TaskCompleted(ctx context.Context, in *TaskUID, opts ...grpc.CallOption) (*TaskCompletedResponse, error)
	TaskFailed(ctx context.Context, in *TaskUID, opts ...grpc.CallOption) (*TaskFailedResponse, error)
	TaskRemoved(ctx context.Context, in *TaskUID, opts ...grpc.CallOption) (*TaskRemovedResponse, error)
	TaskSubmitted(ctx context.Context, in *TaskDescription, opts ...grpc.CallOption) (*TaskSubmittedResponse, error)
	TaskUpdated(ctx context.Context, in *TaskDescription, opts ...grpc.CallOption) (*TaskUpdatedResponse, error)
	NodeAdded(ctx context.Context, in *ResourceTopologyNodeDescriptor, opts ...grpc.CallOption) (*NodeAddedResponse, error)
	NodeFailed(ctx context.Context, in *ResourceUID, opts ...grpc.CallOption) (*NodeFailedResponse, error)
	NodeRemoved(ctx context.Context, in *ResourceUID, opts ...grpc.CallOption) (*NodeRemovedResponse, error)
	NodeUpdated(ctx context.Context, in *ResourceTopologyNodeDescriptor, opts ...grpc.CallOption) (*NodeUpdatedResponse, error)
	AddTaskStats(ctx context.Context, in *TaskStats, opts ...grpc.CallOption) (*TaskStatsResponse, error)
	AddNodeStats(ctx context.Context, in *ResourceStats, opts ...grpc.CallOption) (*ResourceStatsResponse, error)
}

type firmamentSchedulerClient struct {
	cc *grpc.ClientConn
}

func NewFirmamentSchedulerClient(cc *grpc.ClientConn) FirmamentSchedulerClient {
	return &firmamentSchedulerClient{cc}
}

func (c *firmamentSchedulerClient) Schedule(ctx context.Context, in *ScheduleRequest, opts ...grpc.CallOption) (*SchedulingDeltas, error) {
	out := new(SchedulingDeltas)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/Schedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) TaskCompleted(ctx context.Context, in *TaskUID, opts ...grpc.CallOption) (*TaskCompletedResponse, error) {
	out := new(TaskCompletedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/TaskCompleted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) TaskFailed(ctx context.Context, in *TaskUID, opts ...grpc.CallOption) (*TaskFailedResponse, error) {
	out := new(TaskFailedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/TaskFailed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) TaskRemoved(ctx context.Context, in *TaskUID, opts ...grpc.CallOption) (*TaskRemovedResponse, error) {
	out := new(TaskRemovedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/TaskRemoved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) TaskSubmitted(ctx context.Context, in *TaskDescription, opts ...grpc.CallOption) (*TaskSubmittedResponse, error) {
	out := new(TaskSubmittedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/TaskSubmitted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) TaskUpdated(ctx context.Context, in *TaskDescription, opts ...grpc.CallOption) (*TaskUpdatedResponse, error) {
	out := new(TaskUpdatedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/TaskUpdated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) NodeAdded(ctx context.Context, in *ResourceTopologyNodeDescriptor, opts ...grpc.CallOption) (*NodeAddedResponse, error) {
	out := new(NodeAddedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/NodeAdded", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) NodeFailed(ctx context.Context, in *ResourceUID, opts ...grpc.CallOption) (*NodeFailedResponse, error) {
	out := new(NodeFailedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/NodeFailed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) NodeRemoved(ctx context.Context, in *ResourceUID, opts ...grpc.CallOption) (*NodeRemovedResponse, error) {
	out := new(NodeRemovedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/NodeRemoved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) NodeUpdated(ctx context.Context, in *ResourceTopologyNodeDescriptor, opts ...grpc.CallOption) (*NodeUpdatedResponse, error) {
	out := new(NodeUpdatedResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/NodeUpdated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) AddTaskStats(ctx context.Context, in *TaskStats, opts ...grpc.CallOption) (*TaskStatsResponse, error) {
	out := new(TaskStatsResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/AddTaskStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firmamentSchedulerClient) AddNodeStats(ctx context.Context, in *ResourceStats, opts ...grpc.CallOption) (*ResourceStatsResponse, error) {
	out := new(ResourceStatsResponse)
	err := c.cc.Invoke(ctx, "/proto.FirmamentScheduler/AddNodeStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FirmamentSchedulerServer is the server API for FirmamentScheduler service.
type FirmamentSchedulerServer interface {
	Schedule(context.Context, *ScheduleRequest) (*SchedulingDeltas, error)
	TaskCompleted(context.Context, *TaskUID) (*TaskCompletedResponse, error)
	TaskFailed(context.Context, *TaskUID) (*TaskFailedResponse, error)
	TaskRemoved(context.Context, *TaskUID) (*TaskRemovedResponse, error)
	TaskSubmitted(context.Context, *TaskDescription) (*TaskSubmittedResponse, error)
	TaskUpdated(context.Context, *TaskDescription) (*TaskUpdatedResponse, error)
	NodeAdded(context.Context, *ResourceTopologyNodeDescriptor) (*NodeAddedResponse, error)
	NodeFailed(context.Context, *ResourceUID) (*NodeFailedResponse, error)
	NodeRemoved(context.Context, *ResourceUID) (*NodeRemovedResponse, error)
	NodeUpdated(context.Context, *ResourceTopologyNodeDescriptor) (*NodeUpdatedResponse, error)
	AddTaskStats(context.Context, *TaskStats) (*TaskStatsResponse, error)
	AddNodeStats(context.Context, *ResourceStats) (*ResourceStatsResponse, error)
}

// UnimplementedFirmamentSchedulerServer can be embedded to have forward compatible implementations.
type UnimplementedFirmamentSchedulerServer struct {
}

func (*UnimplementedFirmamentSchedulerServer) Schedule(ctx context.Context, req *ScheduleRequest) (*SchedulingDeltas, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Schedule not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) TaskCompleted(ctx context.Context, req *TaskUID) (*TaskCompletedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskCompleted not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) TaskFailed(ctx context.Context, req *TaskUID) (*TaskFailedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskFailed not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) TaskRemoved(ctx context.Context, req *TaskUID) (*TaskRemovedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskRemoved not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) TaskSubmitted(ctx context.Context, req *TaskDescription) (*TaskSubmittedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskSubmitted not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) TaskUpdated(ctx context.Context, req *TaskDescription) (*TaskUpdatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TaskUpdated not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) NodeAdded(ctx context.Context, req *ResourceTopologyNodeDescriptor) (*NodeAddedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeAdded not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) NodeFailed(ctx context.Context, req *ResourceUID) (*NodeFailedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeFailed not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) NodeRemoved(ctx context.Context, req *ResourceUID) (*NodeRemovedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeRemoved not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) NodeUpdated(ctx context.Context, req *ResourceTopologyNodeDescriptor) (*NodeUpdatedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeUpdated not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) AddTaskStats(ctx context.Context, req *TaskStats) (*TaskStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTaskStats not implemented")
}
func (*UnimplementedFirmamentSchedulerServer) AddNodeStats(ctx context.Context, req *ResourceStats) (*ResourceStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNodeStats not implemented")
}

func RegisterFirmamentSchedulerServer(s *grpc.Server, srv FirmamentSchedulerServer) {
	s.RegisterService(&_FirmamentScheduler_serviceDesc, srv)
}

func _FirmamentScheduler_Schedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).Schedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/Schedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).Schedule(ctx, req.(*ScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_TaskCompleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).TaskCompleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/TaskCompleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).TaskCompleted(ctx, req.(*TaskUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_TaskFailed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).TaskFailed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/TaskFailed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).TaskFailed(ctx, req.(*TaskUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_TaskRemoved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).TaskRemoved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/TaskRemoved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).TaskRemoved(ctx, req.(*TaskUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_TaskSubmitted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).TaskSubmitted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/TaskSubmitted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).TaskSubmitted(ctx, req.(*TaskDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_TaskUpdated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).TaskUpdated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/TaskUpdated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).TaskUpdated(ctx, req.(*TaskDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_NodeAdded_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceTopologyNodeDescriptor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).NodeAdded(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/NodeAdded",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).NodeAdded(ctx, req.(*ResourceTopologyNodeDescriptor))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_NodeFailed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).NodeFailed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/NodeFailed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).NodeFailed(ctx, req.(*ResourceUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_NodeRemoved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).NodeRemoved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/NodeRemoved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).NodeRemoved(ctx, req.(*ResourceUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_NodeUpdated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceTopologyNodeDescriptor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).NodeUpdated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/NodeUpdated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).NodeUpdated(ctx, req.(*ResourceTopologyNodeDescriptor))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_AddTaskStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).AddTaskStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/AddTaskStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).AddTaskStats(ctx, req.(*TaskStats))
	}
	return interceptor(ctx, in, info, handler)
}

func _FirmamentScheduler_AddNodeStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceStats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirmamentSchedulerServer).AddNodeStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FirmamentScheduler/AddNodeStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirmamentSchedulerServer).AddNodeStats(ctx, req.(*ResourceStats))
	}
	return interceptor(ctx, in, info, handler)
}

var _FirmamentScheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FirmamentScheduler",
	HandlerType: (*FirmamentSchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Schedule",
			Handler:    _FirmamentScheduler_Schedule_Handler,
		},
		{
			MethodName: "TaskCompleted",
			Handler:    _FirmamentScheduler_TaskCompleted_Handler,
		},
		{
			MethodName: "TaskFailed",
			Handler:    _FirmamentScheduler_TaskFailed_Handler,
		},
		{
			MethodName: "TaskRemoved",
			Handler:    _FirmamentScheduler_TaskRemoved_Handler,
		},
		{
			MethodName: "TaskSubmitted",
			Handler:    _FirmamentScheduler_TaskSubmitted_Handler,
		},
		{
			MethodName: "TaskUpdated",
			Handler:    _FirmamentScheduler_TaskUpdated_Handler,
		},
		{
			MethodName: "NodeAdded",
			Handler:    _FirmamentScheduler_NodeAdded_Handler,
		},
		{
			MethodName: "NodeFailed",
			Handler:    _FirmamentScheduler_NodeFailed_Handler,
		},
		{
			MethodName: "NodeRemoved",
			Handler:    _FirmamentScheduler_NodeRemoved_Handler,
		},
		{
			MethodName: "NodeUpdated",
			Handler:    _FirmamentScheduler_NodeUpdated_Handler,
		},
		{
			MethodName: "AddTaskStats",
			Handler:    _FirmamentScheduler_AddTaskStats_Handler,
		},
		{
			MethodName: "AddNodeStats",
			Handler:    _FirmamentScheduler_AddNodeStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "firmament_scheduler.proto",
}
